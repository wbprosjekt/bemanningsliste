// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/admin/bemanningsliste/[year]/[week]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/bemanningsliste/[year]/[week]">> = Specific
  const handler = {} as typeof import("../../src/app/admin/bemanningsliste/[year]/[week]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/brukere/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/brukere">> = Specific
  const handler = {} as typeof import("../../src/app/admin/brukere/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/integrasjoner/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/integrasjoner">> = Specific
  const handler = {} as typeof import("../../src/app/admin/integrasjoner/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/integrasjoner/tripletex/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/integrasjoner/tripletex">> = Specific
  const handler = {} as typeof import("../../src/app/admin/integrasjoner/tripletex/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/rapporter/maanedlig/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/rapporter/maanedlig">> = Specific
  const handler = {} as typeof import("../../src/app/admin/rapporter/maanedlig/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/settings/email-logs/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/settings/email-logs">> = Specific
  const handler = {} as typeof import("../../src/app/admin/settings/email-logs/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/settings/email/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/settings/email">> = Specific
  const handler = {} as typeof import("../../src/app/admin/settings/email/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/settings">> = Specific
  const handler = {} as typeof import("../../src/app/admin/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/settings/reminders/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/settings/reminders">> = Specific
  const handler = {} as typeof import("../../src/app/admin/settings/reminders/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/settings/templates/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/settings/templates">> = Specific
  const handler = {} as typeof import("../../src/app/admin/settings/templates/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/timer/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/timer">> = Specific
  const handler = {} as typeof import("../../src/app/admin/timer/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/auth/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth">> = Specific
  const handler = {} as typeof import("../../src/app/auth/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/auth/reset-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/reset-password">> = Specific
  const handler = {} as typeof import("../../src/app/auth/reset-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/befaring/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/befaring/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/befaring/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/befaring/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/befaring">> = Specific
  const handler = {} as typeof import("../../src/app/befaring/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/cookies/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cookies">> = Specific
  const handler = {} as typeof import("../../src/app/cookies/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/min/uke-v2/[year]/[week]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/min/uke-v2/[year]/[week]">> = Specific
  const handler = {} as typeof import("../../src/app/min/uke-v2/[year]/[week]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/min/uke-v2/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/min/uke-v2">> = Specific
  const handler = {} as typeof import("../../src/app/min/uke-v2/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/min/uke/[year]/[week]/oversikt/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/min/uke/[year]/[week]/oversikt">> = Specific
  const handler = {} as typeof import("../../src/app/min/uke/[year]/[week]/oversikt/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/min/uke/[year]/[week]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/min/uke/[year]/[week]">> = Specific
  const handler = {} as typeof import("../../src/app/min/uke/[year]/[week]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/min/uke/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/min/uke">> = Specific
  const handler = {} as typeof import("../../src/app/min/uke/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/privacy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/privacy">> = Specific
  const handler = {} as typeof import("../../src/app/privacy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/terms/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/terms">> = Specific
  const handler = {} as typeof import("../../src/app/terms/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-inbox/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-inbox">> = Specific
  const handler = {} as typeof import("../../src/app/test-inbox/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-upload/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-upload">> = Specific
  const handler = {} as typeof import("../../src/app/test-upload/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/uke/[year]/[week]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/uke/[year]/[week]">> = Specific
  const handler = {} as typeof import("../../src/app/uke/[year]/[week]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/current-weather/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/current-weather">> = Specific
  const handler = {} as typeof import("../../src/app/api/current-weather/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/forecast/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/forecast">> = Specific
  const handler = {} as typeof import("../../src/app/api/forecast/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/historical-weather/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/historical-weather">> = Specific
  const handler = {} as typeof import("../../src/app/api/historical-weather/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
